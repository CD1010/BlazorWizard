@using Fluxor;
@using BlazorWizard.Store.Wizard;
@using Blazorise;
@inject IState<WizardState> state

@inject IDispatcher dispatcher


@if (_task.IsCompleted)
{
<Wizard Id="DemoWizard" @ref="@TheWiz">

    <WizardStep Name="First" Enabled="@state.Value.States[0].Visible">
        <div class="row">
            <FirstStep></FirstStep>
        </div>
    </WizardStep>

    <WizardStep Name="Second Step" Enabled="@state.Value.States[1].Visible">
        <div class="row">
            <p>Wow, you've reached the second step!</p>
        </div>
    </WizardStep>
    <WizardStep Name="Final Step" Enabled="@state.Value.States[2].Visible">
        <div class="row">
            <p>The final step has been reached. Thank you \o/</p>
        </div>
    </WizardStep>
</Wizard>
}
else
{
    <div>Loading</div>
}
@code {
    public Wizard TheWiz { set; get; }
    Task _task;
    protected override void  OnInitialized()
    {

    }
    protected override void OnParametersSet()
    {

        StateHasChanged();
        _task = Task.CompletedTask;
        base.OnParametersSet();
    }


}
